<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.1004.1720                               -->
<workbook source-build='10.0.2 (10000.16.1004.1720)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='batsman_vs_bowler_total' inline='true' name='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='batsman_vs_bowler_total' name='textscan.1hx3egq15p1ul7143rfj71wi4b9o'>
            <connection class='textscan' directory='C:/Users/kumarshivam675/Desktop/Shivam/semesters/semester 7/data analytics/da-project/Cricket-Insights/final data generated' filename='batsman_vs_bowler_total.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='team_summary.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Batsman' />
            <column datatype='string' name='Bowler' />
            <column datatype='integer' name='Zero' />
            <column datatype='integer' name='One' />
            <column datatype='integer' name='Two' />
            <column datatype='integer' name='Three' />
            <column datatype='integer' name='Four' />
            <column datatype='integer' name='Five' />
            <column datatype='integer' name='Six' />
            <column datatype='integer' name='Wicket' />
            <column datatype='integer' name='Total' />
            <column datatype='string' name='batting_style' />
            <column datatype='string' name='bowling_arm' />
            <column datatype='string' name='bowling_style' />
            <column datatype='integer' name='Bowls played' />
            <column datatype='real' name='Strike Rate' />
            <column datatype='real' name='Average' />
            <column datatype='string' name='op_player1' />
            <column datatype='string' name='op_player2' />
            <column datatype='string' name='op_partner-name' />
            <column datatype='string' name='op_team' />
            <column datatype='integer' name='op_partnership' />
            <column datatype='string' name='op_winner' />
            <column datatype='string' name='op_looser' />
            <column datatype='string' name='player1' />
            <column datatype='string' name='player2' />
            <column datatype='string' name='partner-name' />
            <column datatype='string' name='team' />
            <column datatype='integer' name='partnership' />
            <column datatype='string' name='winner' />
            <column datatype='string' name='looser' />
            <column datatype='integer' name='Match ID' />
            <column datatype='string' name='Player Name' />
            <column datatype='integer' name='Runs scored' />
            <column datatype='integer' name='Balls' />
            <column datatype='integer' name='Fours' />
            <column datatype='integer' name='Sixes' />
            <column datatype='string' name='Wicket Taker' />
            <column datatype='string' name='Wicket Type' />
            <column datatype='integer' name='Balls Bowled' />
            <column datatype='integer' name='Runs Conceded' />
            <column datatype='integer' name='Wickets Taken' />
            <column datatype='string' name='Team' />
            <column datatype='string' name='Non Striker' />
            <column datatype='integer' name='Match_id' />
            <column datatype='string' name='Team1_id' />
            <column datatype='string' name='Team2_id' />
            <column datatype='string' name='Venue' />
            <column datatype='string' name='City' />
            <column datatype='string' name='Toss' />
            <column datatype='string' name='Elected_to' />
            <column datatype='string' name='Win_team' />
            <column datatype='string' name='loser' />
            <column datatype='date' name='Date' />
            <column datatype='integer' name='Win_by_runs' />
            <column datatype='integer' name='Win_by_wickets' />
            <column datatype='integer' name='Index' />
            <column datatype='integer' name='Year' />
            <column datatype='string' name='Stadium' />
            <column datatype='real' name='Batting_first_wins' />
            <column datatype='real' name='Batting_second_wins' />
            <column datatype='string' name='Team Name' />
            <column datatype='integer' name='Over' />
            <column datatype='integer' name='Total Runs Scored' />
            <column datatype='integer' name='Total Wickets taken' />
            <column datatype='integer' name='Total Bowls bowled' />
            <column datatype='real' name='Run rate' />
            <column datatype='real' name='Wicket rate' />
            <column datatype='integer' name='Matches Played' />
            <column datatype='integer' name='Wins' />
            <column datatype='real' name='F5' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1hx3egq15p1ul7143rfj71wi4b9o' name='batsman_vs_bowler_total.csv' table='[batsman_vs_bowler_total#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Batsman' ordinal='0' />
              <column datatype='string' name='Bowler' ordinal='1' />
              <column datatype='integer' name='Zero' ordinal='2' />
              <column datatype='integer' name='One' ordinal='3' />
              <column datatype='integer' name='Two' ordinal='4' />
              <column datatype='integer' name='Three' ordinal='5' />
              <column datatype='integer' name='Four' ordinal='6' />
              <column datatype='integer' name='Five' ordinal='7' />
              <column datatype='integer' name='Six' ordinal='8' />
              <column datatype='integer' name='Wicket' ordinal='9' />
              <column datatype='integer' name='Total' ordinal='10' />
              <column datatype='string' name='batting_style' ordinal='11' />
              <column datatype='string' name='bowling_arm' ordinal='12' />
              <column datatype='string' name='bowling_style' ordinal='13' />
              <column datatype='integer' name='Bowls played' ordinal='14' />
              <column datatype='real' name='Strike Rate' ordinal='15' />
              <column datatype='real' name='Average' ordinal='16' />
            </columns>
          </relation>
          <relation connection='textscan.1hx3egq15p1ul7143rfj71wi4b9o' name='openingPartnership.csv' table='[openingPartnership#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='op_player1' ordinal='0' />
              <column datatype='string' name='op_player2' ordinal='1' />
              <column datatype='string' name='op_partner-name' ordinal='2' />
              <column datatype='string' name='op_team' ordinal='3' />
              <column datatype='integer' name='op_partnership' ordinal='4' />
              <column datatype='string' name='op_winner' ordinal='5' />
              <column datatype='string' name='op_looser' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.1hx3egq15p1ul7143rfj71wi4b9o' name='partnerships.csv' table='[partnerships#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='player1' ordinal='0' />
              <column datatype='string' name='player2' ordinal='1' />
              <column datatype='string' name='partner-name' ordinal='2' />
              <column datatype='string' name='team' ordinal='3' />
              <column datatype='integer' name='partnership' ordinal='4' />
              <column datatype='string' name='winner' ordinal='5' />
              <column datatype='string' name='looser' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.1hx3egq15p1ul7143rfj71wi4b9o' name='scorecard_1.csv' table='[scorecard_1#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Match ID' ordinal='0' />
              <column datatype='string' name='Player Name' ordinal='1' />
              <column datatype='integer' name='Runs scored' ordinal='2' />
              <column datatype='integer' name='Balls' ordinal='3' />
              <column datatype='integer' name='Fours' ordinal='4' />
              <column datatype='integer' name='Sixes' ordinal='5' />
              <column datatype='string' name='Wicket Taker' ordinal='6' />
              <column datatype='string' name='Wicket Type' ordinal='7' />
              <column datatype='integer' name='Balls Bowled' ordinal='8' />
              <column datatype='integer' name='Runs Conceded' ordinal='9' />
              <column datatype='integer' name='Wickets Taken' ordinal='10' />
              <column datatype='string' name='Team' ordinal='11' />
              <column datatype='string' name='Non Striker' ordinal='12' />
            </columns>
          </relation>
          <relation connection='textscan.1hx3egq15p1ul7143rfj71wi4b9o' name='team_summary.csv' table='[team_summary#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Match_id' ordinal='0' />
              <column datatype='string' name='Team1_id' ordinal='1' />
              <column datatype='string' name='Team2_id' ordinal='2' />
              <column datatype='string' name='Venue' ordinal='3' />
              <column datatype='string' name='City' ordinal='4' />
              <column datatype='string' name='Toss' ordinal='5' />
              <column datatype='string' name='Elected_to' ordinal='6' />
              <column datatype='string' name='Win_team' ordinal='7' />
              <column datatype='string' name='loser' ordinal='8' />
              <column datatype='date' name='Date' ordinal='9' />
              <column datatype='integer' name='Win_by_runs' ordinal='10' />
              <column datatype='integer' name='Win_by_wickets' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.1hx3egq15p1ul7143rfj71wi4b9o' name='venue_innings.csv' table='[venue_innings#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Index' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='string' name='Stadium' ordinal='2' />
              <column datatype='real' name='Batting_first_wins' ordinal='3' />
              <column datatype='real' name='Batting_second_wins' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1hx3egq15p1ul7143rfj71wi4b9o' name='runs_per_over.csv' table='[runs_per_over#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Team Name' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='integer' name='Over' ordinal='2' />
              <column datatype='integer' name='Total Runs Scored' ordinal='3' />
              <column datatype='integer' name='Total Wickets taken' ordinal='4' />
              <column datatype='integer' name='Total Bowls bowled' ordinal='5' />
              <column datatype='real' name='Run rate' ordinal='6' />
              <column datatype='real' name='Wicket rate' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1hx3egq15p1ul7143rfj71wi4b9o' name='location_team_wins.csv' table='[location_team_wins#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='City_locations' ordinal='0' />
              <column datatype='string' name='Team_Name_locations' ordinal='1' />
              <column datatype='integer' name='Matches Played' ordinal='2' />
              <column datatype='integer' name='Win_location' ordinal='3' />
              <column datatype='real' name='Win_average' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Batsman]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Batsman</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Bowler]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Bowler</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zero</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Zero]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Zero</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>One</remote-name>
            <remote-type>3</remote-type>
            <local-name>[One]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>One</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Two</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Two]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Two</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Three</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Three]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Three</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Four</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Four]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Four</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Five</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Five]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Five</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Six</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Six]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Six</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wicket</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Wicket]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Wicket</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_style</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_style]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>batting_style</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_arm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_arm]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>bowling_arm</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_style</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_style]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>bowling_style</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bowls played</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Bowls played]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Bowls played</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Strike Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Strike Rate]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Strike Rate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Average</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>op_player1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[op_player1]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>op_player1</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>op_player2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[op_player2]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>op_player2</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>op_partner-name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[op_partner-name]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>op_partner-name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>op_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[op_team]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>op_team</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>op_partnership</remote-name>
            <remote-type>3</remote-type>
            <local-name>[op_partnership]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>op_partnership</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>op_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[op_winner]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>op_winner</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>op_looser</remote-name>
            <remote-type>129</remote-type>
            <local-name>[op_looser]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>op_looser</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player1]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>player1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player2]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>player2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>partner-name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[partner-name]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>partner-name</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>team</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>partnership</remote-name>
            <remote-type>3</remote-type>
            <local-name>[partnership]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>partnership</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>looser</remote-name>
            <remote-type>129</remote-type>
            <local-name>[looser]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>looser</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Match ID]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Match ID</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player Name]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Player Name</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runs scored</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Runs scored]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Runs scored</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Balls</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Balls]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Balls</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fours</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Fours]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Fours</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sixes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Sixes]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Sixes</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wicket Taker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Wicket Taker]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Wicket Taker</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wicket Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Wicket Type]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Wicket Type</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Balls Bowled</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Balls Bowled]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Balls Bowled</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runs Conceded</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Runs Conceded]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Runs Conceded</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wickets Taken</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Wickets Taken]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Wickets Taken</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Non Striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Non Striker]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Non Striker</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Match_id]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Match_id</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team1_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team1_id]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Team1_id</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team2_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team2_id]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Team2_id</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Venue]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Venue</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Toss</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Toss]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Toss</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Elected_to</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Elected_to]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Elected_to</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Win_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Win_team]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Win_team</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loser</remote-name>
            <remote-type>129</remote-type>
            <local-name>[loser]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>loser</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>53</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Win_by_runs</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Win_by_runs]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Win_by_runs</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Win_by_wickets</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Win_by_wickets]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Win_by_wickets</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Index</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Index]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Index</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stadium</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Stadium]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Stadium</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Batting_first_wins</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Batting_first_wins]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Batting_first_wins</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Batting_second_wins</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Batting_second_wins]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Batting_second_wins</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team Name]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Team Name</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Over</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Over]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Over</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Runs Scored</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total Runs Scored]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Total Runs Scored</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Wickets taken</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total Wickets taken]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Total Wickets taken</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Bowls bowled</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total Bowls bowled]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Total Bowls bowled</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Run rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Run rate]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Run rate</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wicket rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wicket rate]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Wicket rate</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City_locations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City_locations]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>City_locations</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team_Name_locations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team_Name_locations]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Team_Name_locations</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Matches Played</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Matches Played]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Matches Played</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Win_location</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Win_location]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Win_location</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Win_average</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Win_average]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Win_average</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[team_summary.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Batsman]' role='dimension' type='nominal' />
      <column datatype='real' name='[Batting_first_wins]' role='measure' type='quantitative' />
      <column datatype='real' name='[Batting_second_wins]' role='measure' type='quantitative' />
      <column caption='actual_strikerate' datatype='real' name='[Calculation_142989295629352960]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total])/SUM([Bowls played])*100' />
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_222365239057776641]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <column caption='actual_average' datatype='real' name='[Calculation_222365239058075650]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total])/SUM([Wicket])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City_locations]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Elected to' datatype='string' name='[Elected_to]' role='dimension' type='nominal' />
      <column caption='Match id' datatype='integer' name='[Match_id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Run rate]' role='measure' type='quantitative' />
      <column datatype='string' name='[Team Name]' role='dimension' type='nominal' />
      <column caption='Team1 id' datatype='string' name='[Team1_id]' role='dimension' type='nominal' />
      <column caption='Team2 id' datatype='string' name='[Team2_id]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Total Runs Scored]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Wickets taken]' role='measure' type='quantitative' />
      <column datatype='real' name='[Wicket rate]' role='measure' type='quantitative' />
      <column caption='Win by runs' datatype='integer' name='[Win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win by wickets' datatype='integer' name='[Win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Win team' datatype='string' name='[Win_team]' role='dimension' type='nominal' />
      <column datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Year]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;2,008&quot;'>
            <value>2008</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
      <column datatype='string' name='[bowling_style (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[bowling_style]' new-bin='true'>
          <bin default-name='true' value='&quot;fast &amp; fast-medium&quot;'>
            <value>&quot;fast&quot;</value>
            <value>&quot;fast-medium&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;legbreak, offbreak, slow&quot;'>
            <value>&quot;legbreak&quot;</value>
            <value>&quot;offbreak&quot;</value>
            <value>&quot;slow&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[bowling_style (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[bowling_style]' new-bin='true'>
          <bin default-name='true' value='&quot;fast &amp; fast-medium&quot;'>
            <value>&quot;fast&quot;</value>
            <value>&quot;fast-medium&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[bowling_style]' role='dimension' type='nominal' />
      <column caption='Loser' datatype='string' name='[loser]' role='dimension' type='nominal' />
      <column caption='Partner-Name' datatype='string' name='[partner-name]' role='dimension' type='nominal' />
      <column caption='Partnership' datatype='integer' name='[partnership]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[Batting_first_wins]' derivation='Attribute' name='[attr:Batting_first_wins:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Attribute' name='[attr:Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Run rate]' derivation='Avg' name='[avg:Run rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wicket rate]' derivation='Avg' name='[avg:Wicket rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Batsman]' derivation='None' name='[none:Batsman:nk]' pivot='key' type='nominal' />
      <column-instance column='[Batting_first_wins]' derivation='None' name='[none:Batting_first_wins:qk]' pivot='key' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Elected_to]' derivation='None' name='[none:Elected_to:nk]' pivot='key' type='nominal' />
      <column-instance column='[Team Name]' derivation='None' name='[none:Team Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bowling_style]' derivation='None' name='[none:bowling_style:nk]' pivot='key' type='nominal' />
      <column-instance column='[Batting_first_wins]' derivation='Sum' name='[sum:Batting_first_wins:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Batting_second_wins]' derivation='Sum' name='[sum:Batting_second_wins:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Runs Scored]' derivation='Sum' name='[sum:Total Runs Scored:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Wickets taken]' derivation='Sum' name='[sum:Total Wickets taken:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Sum' name='[sum:Year:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.53112' measure-ordering='alphabetic' measure-percentage='0.46888' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bloemfontein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Port Elizabeth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Durban&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuttack&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cape Town&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Centurion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Raipur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East London&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kimberley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dharamsala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Batsman:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Team Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[bowling_style (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;fast-medium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;slow&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;medium-fast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;offbreak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;medium&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;legbreak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fast&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;fast &amp; fast-medium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:bowling_style:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;fast-medium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;slow&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;medium-fast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;offbreak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;medium&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;legbreak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fast&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[bowling_style (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;fast-medium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;slow&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;medium-fast&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;legbreak, offbreak, slow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;offbreak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;medium&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;legbreak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fast&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;fast &amp; fast-medium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[attr:Batting_first_wins:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Batting_first_wins:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_first_wins:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[avg:Run rate:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[attr:Year:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Year:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Year:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Total Runs Scored:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Total Wickets taken:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[avg:Wicket rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_second_wins:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Elected_to:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;field&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bat&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1. Venue vs Elected To</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='batsman_vs_bowler_total' name='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw' />
          </datasources>
          <datasource-dependencies datasource='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Elected to' datatype='string' name='[Elected_to]' role='dimension' type='nominal' />
            <column-instance column='[Elected_to]' derivation='Count' name='[cnt:Elected_to:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Elected_to]' derivation='None' name='[none:Elected_to:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:City:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:City:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:City:nk]' member='%null%' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Abu Dhabi&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Bloemfontein&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Cape Town&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Centurion&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;East London&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Indore&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Kanpur&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Kimberley&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Kochi&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Nagpur&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Elizabeth&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Elected_to:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[cnt:Elected_to:qk]</rows>
        <cols>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:City:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>venue vs batting order victory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='batsman_vs_bowler_total' name='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw' />
          </datasources>
          <datasource-dependencies datasource='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw'>
            <column datatype='real' name='[Batting_first_wins]' role='measure' type='quantitative' />
            <column datatype='real' name='[Batting_second_wins]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Stadium]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Stadium]' derivation='None' name='[none:Stadium:nk]' pivot='key' type='nominal' />
            <column-instance column='[Batting_first_wins]' derivation='Sum' name='[sum:Batting_first_wins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Batting_second_wins]' derivation='Sum' name='[sum:Batting_second_wins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Stadium:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Stadium:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Stadium:nk]' member='%null%' />
                <groupfilter from='&quot;Barabati Stadium&quot;' function='range' level='[none:Stadium:nk]' to='&quot;De Beers Diamond Oval&quot;' />
                <groupfilter function='member' level='[none:Stadium:nk]' member='&quot;Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium&quot;' />
                <groupfilter from='&quot;Green Park&quot;' function='range' level='[none:Stadium:nk]' to='&quot;Kingsmead&quot;' />
                <groupfilter from='&quot;Maharashtra Cricket Association Stadium&quot;' function='range' level='[none:Stadium:nk]' to='&quot;Punjab Cricket Association IS Bindra Stadium  Mohali&quot;' />
                <groupfilter function='member' level='[none:Stadium:nk]' member='&quot;Sardar Patel Stadium  Motera&quot;' />
                <groupfilter function='member' level='[none:Stadium:nk]' member='&quot;Saurashtra Cricket Association Stadium&quot;' />
                <groupfilter from='&quot;Shaheed Veer Narayan Singh International Stadium&quot;' function='range' level='[none:Stadium:nk]' to='&quot;St George&apos;s Park&quot;' />
                <groupfilter function='member' level='[none:Stadium:nk]' member='&quot;Vidarbha Cricket Association Stadium  Jamtha&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Stadium:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_first_wins:qk]' />
              <text column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:City:nk]' />
              <text column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Stadium:nk]' />
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_second_wins:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>venue vs batting order victory-season-wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='batsman_vs_bowler_total' name='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw' />
          </datasources>
          <datasource-dependencies datasource='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw'>
            <column datatype='real' name='[Batting_first_wins]' role='measure' type='quantitative' />
            <column datatype='real' name='[Batting_second_wins]' role='measure' type='quantitative' />
            <column datatype='string' name='[Stadium]' role='dimension' type='nominal' />
            <column datatype='string' name='[Venue]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[Stadium]' derivation='None' name='[none:Stadium:nk]' pivot='key' type='nominal' />
            <column-instance column='[Venue]' derivation='None' name='[none:Venue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Batting_first_wins]' derivation='Sum' name='[sum:Batting_first_wins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Batting_second_wins]' derivation='Sum' name='[sum:Batting_second_wins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Stadium:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Stadium:nk]' member='&quot;M Chinnaswamy Stadium&quot;' />
              <groupfilter function='member' level='[none:Stadium:nk]' member='&quot;MA Chidambaram Stadium  Chepauk&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Venue:nk]'>
            <groupfilter function='member' level='[none:Venue:nk]' member='%null%' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Year:qk]' included-values='in-range'>
            <min>2008</min>
            <max>2016</max>
          </filter>
          <slices>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Year:qk]</column>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Venue:nk]</column>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Stadium:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_second_wins:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='subtitle' class='0' field='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_second_wins:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_second_wins:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_first_wins:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_second_wins:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Stadium:nk] * ([federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_first_wins:qk] + [federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_second_wins:qk]))</rows>
        <cols>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RCB winning partnership</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='batsman_vs_bowler_total' name='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw' />
          </datasources>
          <datasource-dependencies datasource='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw'>
            <column-instance column='[partnership]' derivation='Attribute' name='[attr:partnership:qk]' pivot='key' type='quantitative' />
            <column-instance column='[partner-name]' derivation='None' name='[none:partner-name:nk]' pivot='key' type='nominal' />
            <column-instance column='[partnership]' derivation='None' name='[none:partnership:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Partner-Name' datatype='string' name='[partner-name]' role='dimension' type='nominal' />
            <column caption='Partnership' datatype='integer' name='[partnership]' role='measure' type='quantitative' />
            <column-instance column='[partnership]' derivation='Sum' name='[sum:partnership:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partner-name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:partner-name:nk]' member='&quot;CH Gayle- TM Dilshan&quot;' />
              <groupfilter function='member' level='[none:partner-name:nk]' member='&quot;CH Gayle- V Kohli&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partner-name:nk]' direction='DESC' using='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:partnership:qk]' />
          <filter class='quantitative' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partnership:qk]' included-values='in-range'>
            <min>10</min>
          </filter>
          <slices>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partner-name:nk]</column>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partnership:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[attr:partnership:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partner-name:nk] * [federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partnership:qk])</rows>
        <cols>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:winner:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Team vs Opening Partnership&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='batsman_vs_bowler_total' name='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw' />
          </datasources>
          <datasource-dependencies datasource='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw'>
            <column-instance column='[op_partnership]' derivation='None' name='[none:op_partnership:qk]' pivot='key' type='quantitative' />
            <column-instance column='[op_team]' derivation='None' name='[none:op_team:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[op_partnership]' role='measure' type='quantitative' />
            <column datatype='string' name='[op_team]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:op_team:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:op_team:nk]' />
              <groupfilter function='member' level='[none:op_team:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:op_team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_red' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:op_team:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:op_partnership:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:op_partnership:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#e10110' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:op_partnership:qk]</rows>
        <cols>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:op_team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Run rate vs Over</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='batsman_vs_bowler_total' name='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw' />
          </datasources>
          <datasource-dependencies datasource='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw'>
            <column datatype='integer' name='[Over]' role='measure' type='quantitative' />
            <column datatype='real' name='[Run rate]' role='measure' type='quantitative' />
            <column datatype='real' name='[Wicket rate]' role='measure' type='quantitative' />
            <column-instance column='[Run rate]' derivation='Avg' name='[avg:Run rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wicket rate]' derivation='Avg' name='[avg:Wicket rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Over]' derivation='None' name='[none:Over:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[avg:Wicket rate:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[avg:Run rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[avg:Wicket rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[avg:Run rate:qk] + [federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[avg:Wicket rate:qk])</rows>
        <cols>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Over:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Batting Style Wise Average Against Bowling Style</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='batsman_vs_bowler_total' name='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw' />
          </datasources>
          <datasource-dependencies datasource='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw'>
            <column caption='actual_average' datatype='real' name='[Calculation_222365239058075650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total])/SUM([Wicket])' />
            </column>
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Wicket]' role='measure' type='quantitative' />
            <column datatype='string' name='[batting_style]' role='dimension' type='nominal' />
            <column datatype='string' name='[bowling_style (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bowling_style]' new-bin='true'>
                <bin default-name='true' value='&quot;fast &amp; fast-medium&quot;'>
                  <value>&quot;fast&quot;</value>
                  <value>&quot;fast-medium&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;legbreak, offbreak, slow&quot;'>
                  <value>&quot;legbreak&quot;</value>
                  <value>&quot;offbreak&quot;</value>
                  <value>&quot;slow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[bowling_style]' role='dimension' type='nominal' />
            <column-instance column='[batting_style]' derivation='None' name='[none:batting_style:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_222365239058075650]' derivation='User' name='[usr:Calculation_222365239058075650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:batting_style:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:batting_style:nk]' />
              <groupfilter function='member' level='[none:batting_style:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:batting_style:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[bowling_style (group) 1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[usr:Calculation_222365239058075650:qk]</rows>
        <cols>([federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[bowling_style (group) 1] / [federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:batting_style:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Batting Style Wise Strike Rate Vs Bowling Style </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='batsman_vs_bowler_total' name='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw' />
          </datasources>
          <datasource-dependencies datasource='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw'>
            <column datatype='integer' name='[Bowls played]' role='measure' type='quantitative' />
            <column caption='actual_strikerate' datatype='real' name='[Calculation_142989295629352960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total])/SUM([Bowls played])*100' />
            </column>
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[batting_style]' role='dimension' type='nominal' />
            <column datatype='string' name='[bowling_style (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bowling_style]' new-bin='true'>
                <bin default-name='true' value='&quot;fast &amp; fast-medium&quot;'>
                  <value>&quot;fast&quot;</value>
                  <value>&quot;fast-medium&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;legbreak, offbreak, slow&quot;'>
                  <value>&quot;legbreak&quot;</value>
                  <value>&quot;offbreak&quot;</value>
                  <value>&quot;slow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[bowling_style]' role='dimension' type='nominal' />
            <column-instance column='[batting_style]' derivation='None' name='[none:batting_style:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_142989295629352960]' derivation='User' name='[usr:Calculation_142989295629352960:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:batting_style:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:batting_style:nk]' />
              <groupfilter function='member' level='[none:batting_style:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:batting_style:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[bowling_style (group) 1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[usr:Calculation_142989295629352960:qk]</rows>
        <cols>([federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[bowling_style (group) 1] / [federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:batting_style:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='batsman_vs_bowler_total' name='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qqa6mm0bb7i0c1bpumpg0nipwjw'>
            <column datatype='string' name='[City_locations]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Matches Played]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team_Name_locations]' role='dimension' type='nominal' />
            <column datatype='real' name='[Win_average]' role='measure' type='quantitative' />
            <column-instance column='[Win_average]' derivation='Avg' name='[avg:Win_average:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City_locations]' derivation='None' name='[none:City_locations:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team_Name_locations]' derivation='None' name='[none:Team_Name_locations:nk]' pivot='key' type='nominal' />
            <column-instance column='[Matches Played]' derivation='Sum' name='[sum:Matches Played:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Team_Name_locations:nk]'>
            <groupfilter function='member' level='[none:Team_Name_locations:nk]' member='&quot;Kolkata Knight Riders&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Team_Name_locations:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[Longitude (generated)]' field-type='quantitative' max='11393867.545238558' min='6269430.4647254981' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[Latitude (generated)]' field-type='quantitative' max='3917527.4003999727' min='833183.35463907488' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:City_locations:nk]' />
              <color column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[avg:Win_average:qk]' />
              <size column='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Matches Played:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Team_Name_locations:nk] * [federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[Latitude (generated)])</rows>
        <cols>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cricket Insights</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='7602' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='18413' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='7602' />
            <zone h='73309' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='26015'>
              <flipboard active-id='6' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='1. Venue vs Elected To' captured-sheet='Sheet 1' id='1' />
                  <story-point caption='Venue vs Batting Order Victory' captured-sheet='Sheet 2' id='2' />
                  <story-point caption='Venue Vs Batting Order Victory-Season-Wise' captured-sheet='Sheet 3' id='3'>
                    <capturedDeltas>
                      <worksheet name='Sheet 3'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='RCB winning partnership' captured-sheet='Sheet 4' id='4' />
                  <story-point caption='Team vs Opening Partnership&#10;' captured-sheet='Sheet 5' id='5' />
                  <story-point caption='Average Run rate vs Over' captured-sheet='Sheet 6' id='6' />
                  <story-point caption='Batting Style Wise Average Against Bowling Style' captured-sheet='Sheet 7' id='7' />
                  <story-point caption='Batting Style Wise Strike Rate Vs Bowling Style ' captured-sheet='Sheet 8' id='8' />
                  <story-point captured-sheet='Sheet 9' id='9' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
        <zone flipboard-zone-id='5' h='10892' hidden='true' id='6' story-point-id='8' type='text' w='40945' x='55807' y='32261'>
          <formatted-text>
            <run>Left handers have a better strike rate than right handers against all types of bowlers.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='9336' hidden='true' id='7' story-point-id='7' type='text' w='42913' x='54921' y='34025'>
          <formatted-text>
            <run fontalignment='0'>Left handers have a better average than right handers against all types of bowlers.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='18050' id='8' story-point-id='6' type='text' w='23819' x='18701' y='15975'>
          <formatted-text>
            <run>Players tend to play faster during powerplay, speeding up gradually over by over and hitting boundaries. The powerplay is finished in 6th over and there is a big drop in the runrate, as the teams are able to take only singles and doubles and also want to settle down. It gradually increases over by over and increases more after 16th over. The wicket-rate graph is similar as players lose their wicket when they try to hit during powerplay and then when they slow down after 6th over, they try to stay on crease for long. During the end overs, the wickets increase drastically as players try to hit every ball and get out easily. </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='11203' hidden='true' id='9' story-point-id='5' type='text' w='80413' x='8661' y='18154'>
          <formatted-text>
            <run>This is a box plot depicting opening partnerships for every team. Most of the IPL winners have an excellent opening partnership.&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='48548' hidden='true' id='10' story-point-id='4' type='text' w='25098' x='74803' y='19191'>
          <formatted-text>
            <run fontalignment='0'>This is a chart depiciting partnership and winning team. The winning mantra for RCB is for Gayle and Dilshan to score more than 50 partnership.&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='28734' hidden='true' id='11' story-point-id='1' type='text' w='37402' x='60433' y='28734'>
          <formatted-text>
            <run fontalignment='0'>This is a graph depicting choice of toss winner for every venue. Teams tend to choose to field first in Bangalore and tend to choose to bat first in Chennai.&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='11203' hidden='true' id='12' story-point-id='2' type='text' w='35728' x='61024' y='71888'>
          <formatted-text>
            <run>This is a bubble graph where a larger size describes batting first victory while a darker colour describes batting second victory.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='14004' hidden='true' id='13' story-point-id='3' type='text' w='59449' x='16437' y='18154'>
          <formatted-text>
            <run>This is a graph depicting batting first wins and batting second wins season wise for a stadium. Consistently in Chinnaswamy Stadium batting second wins.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='11203' hidden='true' id='14' story-point-id='9' type='text' w='33268' x='47835' y='24378'>
          <formatted-text>
            <run>This is KKR&apos;s venue wise performance. Size tells the number of matches played while colour represents wins.</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='146'>
            <card pane-specification-id='0' param='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Elected_to:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Batsman:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Elected_to:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Venue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_second_wins:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:City:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Stadium:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Year:qk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_second_wins:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Stadium:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;M Chinnaswamy Stadium&quot;</bucket>
                </multibucket>
                <axis>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Batting_second_wins:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[:Measure Names]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Stadium:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Venue:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Batsman:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Bowler:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Player Name:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Wicket Type:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:batsman:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:batting:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:looser:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partner-name:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partnership-name:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partnership:qk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:looser:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:op_team:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:partner-name:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:team:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[:Measure Names]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[Year (group)]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Over:qk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Team Name:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[bowling_style (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[bowling_style (group) 1]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Batsman:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:batting_style:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:bowling_style:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[bowling_style (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[bowling_style (group) 1]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:batting_style:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[avg:Win_average:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[sum:Matches Played:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:City:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:City_locations:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Team_Name_locations:nk]</field>
            <field>[federated.1qqa6mm0bb7i0c1bpumpg0nipwjw].[none:Win_team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      z+0QO8G/7IH5ug0aycIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      gnh7QS52g4UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAZ0UlEQVR4nO3deXgcZ4Hn8W9V9a1uSS3JOixbPiTfsuU4sR3bcRxyB0iGZAID5AGSh2Uy
      z7LMwuzOwM7uwu7sLsMfu8sz7BNgOHYCLMkwEMKYxCGJc/i24wRf8ilZsmzJOi21pFZ3V9fx
      7h+SHIfxIVtdJbnr/TyPo5bs1FtVql/VW2+99b6KEEIgSR6lTvUKSNJUkgGQPM136TeDg4Po
      uu5IQdlslkAg4MiyL8e2bVTVvXy7Wd54rVVRFFfKc3tfCiFc2zbFrXuAnp4eysvL3SgKcD9w
      bpZnWRZCCHw+37X/cQ64uW1CCEzTxO/3u1KerAJJniYDIHmaDIDkaTIAkqfJAEieJgMgeZoM
      gORpOQuAbRkMDidHPxs6fX0XMCw7V4uXJEfkLAA9HWf5/ZHjAJw48nvOtTXT2Hwe2dNOms5y
      9iixsqaWgREDEFj+KLfUL+TwoZbRp5a2jWVZZLPZXBV3TflcnhACIQS27c4Vdir2pVudlB14
      lq5g6Gn0TApT9aNpGoqmoWla3nZNcLu8fO8KoSiKa10hcrYH204c4OzZHkYMjdrZFex79xiL
      V6zCnS5NknRjZGe4m7C8fL8CyM5wkuQSGQDJ02QAJE+TAZA8TQZA8jQZAMnTZAAkT5MBkDxN
      BkDyNBkAydNkACRPkwGQPE0GQPI0GQDJ02QAJE+TAZA8TQZA8jQZAMnTZAAkT5MBkDxNBkDy
      NBkAydNkACRPkwGQPE0GQPI0GQDJ0xwJQHfbCbZt38GZroQcHl2a1hwJQFvnALffVk9/T68T
      i5eknHFgdFVBWWGA3fsOUTarDtuysOX8ADkl5wfIHUcCMDiUoriogORQEnVsbgA5P0Du5Pvo
      0Dfl/ADvU1m+ajXJlE4kGpXzA9wAIQQCgS3s0TO9sBHCxhYCS1iksyligULXApDPHNmDvkCI
      4kDIiUVPe6MHrIVhm5iWgWmbGGNfL35vGxhmloyZIWOkGcmOkDZSpLIjpIwUqWyKjJkmY6RJ
      G2kyRoaMOfo5a+oIBHfMv4s/W/8lVFWb6k2+qclTyCQIIUikB9jW/AbHu4+StXQyZgbTMrFs
      E9O2sISJZVtjf97/mYJC0Bci7A8T9keIBCJE/AVEAhHC/gilBWWE/REKAgXv/32ggLA/TEei
      nR/v/R7Haj9EfVXDVO+Gm5oMwA3Imjqn+5p4q3kr+8/upTxazuLyeuKROEFfiJA/SNAXGv08
      9jXoDxH0BQn5wgR9QfzaaB1XueS/l1KUK1ceZxXVcLL7OD9554d848G/JRqMObOheUoIgW7q
      9CZ7ZACuR1IfZv/ZvWxrfoOzA20sraznS3f+O5ZW1KMK927yFRQeXfFxjrx2kM2Nv+aTqz6D
      qshnmlcjhGAg3U9z7ymOdB6kufcUnUMdMgDXYtkWXcOdbG9+g50t21AUhdvn3sEX1v8bKmNV
      aGN1cDebCQFiwUKeuPVJvr/r71g1azWLK5a6Wv50ZwubtJHmXKKNxs7DHDl/kM6hDjRFY35Z
      HXfW3c3yqgY5Sd6VZMwMxzqP8HbzVho7DzOreDYfWnAft9WsJRYszHl512O8GVRR4Yd7vsvZ
      gTN848G/JegLOlLezTJJXtbUOT/UQVPvSRrPH6L5wil0I8Os4hqWVNSztHI580trKQhGL/4/
      MgCXEEKQ1IfZ2bKNt5u30jfSw8rq27h34QPML1tAQAtcsW4+Vc8BepM9/M2rf809Cx/kj+r/
      +Kr3DjdqOgfAFjbnBtp4q3krjecP0p/uJxaIUT+zgfqqBurKFlIcjuPTfCiXudeSVaAxWTPL
      1lOv8OtDv6AwVMzG2rvYVHs38YLSy+646WJGtJxPrfos/7DvB6yoWsn8srqpXiVXJPVhjpw/
      yBtNr3G6r4n5pbXct/jD1FeuoKqoesL3RDIAQCI9wE/e+SFHu47wyVWf5fa5d1AQKHDkbOqE
      tXM2sLt1B8+99yxfu/cb+DR3nqJOhb5kL9tPv8mu1m0k9WHWzFnPp1Z9ljkl8/Cp1384ezoA
      trA52X2MH+55hkiggP94399QE5970xz44zRV49O3fo7//tp/ZuupV3lg8Uduum24GlvY9I30
      sqd1J282vUrIF+a+RR9m/byNxIKFk9pWzwbAtE22HP1nNh/9NevmbuRPbnnipm5Pryqq5mPL
      H+fFw79k+cwGqotmT9m6CASD6QQdiXbKojOIBmOE/eHrbqo1bZNTPSfY1vwGv2/fTzxSwsdX
      PsGamnUEfLm5J/HcTfD409uf7v8Rx7oa+fStn2PD/E03dPmcSHlOuFJnONMy+ObW/0I0EOVL
      d/77iw/bJuuK+5LRXqmWbZFI93O6r4mm3lO0XGiie7iTEX2EcCCCT/Xh1wIUh+MUh4spDpcQ
      D8cpCseJR+JjP48T8oVQUEjpKQ51HWDryVfoGGxnUfkS7l30EEvKlxIORHKyTeM8FQAhBEe7
      jvCjPc8QDRbyZxv+nFnFuTlTTocAALT1n+F/vPafeOK2p9hUd09Oyrt02wzLYCDVT/dwJ819
      p2i9cJrW/tMMZYaIh+NUFs5kfmkdtWULKA7HL14NhjKDDKT7SaQGSKQHSKQTpI3UaH8nM41u
      ZPBrAQpDhQxlBokEoqybu4FNdfdSXTTLsSqdZ6pApmXwyvGX2Nz4K9bN3cjHV36aWOhftuff
      7GriNTy09BF+efA5ls9cSUmkdFLLE0JwNtFG60AzLX1NnOlvpT/Vh27q1MTnMq+0ltU1t1MT
      n0tJQSnRQGxCB+t4d4TRTn+jnf2GM0MMpPtBKCyf2UBxOO74vUzeXwEEgoFUPz/e+z1a+pp5
      4rYnWT/vzpx3HZguVwCAjJHhm69/nYpYJU9v+PMbqt5ZtkVbfysvHHqe493HiEdKmFMyj7qy
      hdSVLWB2fA4BLYiqqDk9SCfzIOxG5PUVQAhBY+chnn3nB0SDMb527zduylae6xXyh/jM6s/z
      ra3/lffOvcOamnXXtc0dg+28fPQ37GvbxbLKFXz5zr9iadVyfFr+HS75t0VjTNvgd0dfYnPj
      C6ybewefWvU5Ijm+gZrOassWcM/CB/j5u8+yrHIF0Use/1/OeOPAK8d/y7bmrVQWzuTLm77K
      kop6bMvOy4Mf8jQAg+kEP9j9DC0XmnhqzZ+ybt5Gz/WWVBWVh+sf4/D5A/ziwM94au3TV9wH
      Q5khtjVvZcuxzRSFi3hyzdOsrrn94kGftdzt6OemvAuAbmT43q6/ozfZw1fv/TpzS+ZP9SpN
      mVgwxhO3Psm33/4Wa2rWsXzmyg/8vWmb7Dj9Fi8d/Q0ZI81jDX/C+nkbifhvnqfgk5VXAUhn
      U3x/93foS/bylTu/RnV81lSv0pSrr2rgjvl38bP9P+brD36TaDBG1spysP1dXjj0C4b1Ie5Z
      +AAPLnmYiD/imQN/XN4EwLRNfrr/R5zua+Kv7vk65QUVnvtlXo6iKHxsxcf5b68eYnPjr2mo
      XsXmIy/Q3HeKjbUf4sNLHqE8VjHVqzll8qIZ1LRNnn/vJ+w5s5Mvb/oqC2YswjAMOSzKGCEE
      +9p28/1d38Gn+lhRfQuPN3ySysKZE7o3ms7doSdrAnvQZt/W36AXzCMUibK6YcG06hxs2RYv
      Hv4ndrS8zb/d9JcsLF881as07SiKwpo560jqw9TE51A3Y5HnGgWuZAIBSNLa3kc0FqWbBKsb
      Fji/VhMkhOC1E1t49cTLfGHdF1lWuWKqV2naUhWVexc9ONWrMe1M4DRQwJJF8+jpb6duxfQ5
      u9rC5q3m1/nVoed5cs0XWFOzbqpXSboJXSMANp1nDrP/cD9r1izhVGOTO2s1AfvadvPcu8/y
      iZWfZsO8TfKGV7oh1wiAIJ1KY9kGgyNwx8ZbJrTQdKKbXTt20HEhmYNV/IM1EoLD5w/yoz3f
      5aPLHuW+RQ/Jg1+6Yde4B9CYv3QNy9rOcfzwUYaJMbOs/hqLtDl6/DS3rluPL8cHphCC491H
      +e7Ob3Pfoof4aP2jcmhAaVImdBPc3p2mrKSc7MDwBBZpkBoaZO+OtymsWkDDguqcDY/eNnCG
      Z3b8b26pvo0/Wvo4tmmT5fLLlMOj547Hh0ePsvzW1QycP4V/dvUEFhlkRkUZ/lghieFMzoZH
      b0+c45ld/4ullct5cu2fXnMMHDk8eu54fHh0m87W0zTc9SBF4Ymt1MKlyzjf1c/SJZU5eWbQ
      m+zh/2z/n1QVVvPU2qcdGwBK8p4JNIPa+LB483e/Ze+h0xNaqBaIMLtmFpHg5M9Qg+kE3377
      W0SDMb648S881aVZct4EjtAQd37kYQzTQnW5T7hu6vz97u+gKipf3PiVa/Zpl6TrNYEjOsXP
      v/8PBMrKqJzfwJ2r3XsYpigKyypXsHbuhkm/2ypJlzOBACiowRBz5syhqNTdl8gDWoCPLPuY
      q2VK3jKBAPjZdM9dpAyLSEHY+TWSJBdN4CbYpOXYUQ7s28arO484v0aS5KIJVYFiRcVkfTaZ
      Qcv5NZIkF131CiBsg8N7dnKia4jaukVUzJCtMFJ+uWoAhntbONXjY/2SMP/v+bdYsnzptHoZ
      RpIm66pVINvOcvrAXnraVUaSGRqPNVNzZ4MMgZQ38uKd4MuRfYFyJ5/fCZYvhkqedh0BSLF/
      TyPudFKVJHdM4Bpqcey9fXQNZlD9YYYyFkUh+RKKlB8mcAUY4ejxHhbOn8HZUwd5c9tx59dK
      klwygStAhMJQkh0736Nw5ixisZDzayVJLplAAEw0JQAFcdZvuJsZMgBSHplAFSjAynW3U2h0
      8eKW3SBHYJDyyASuADrNJ1tZdPuH2VB8804jKkmXc9UrgG0ZnDl+graO0zz73e+x/1SHW+sl
      Sa64agBGBk7z3POvUDJnCQ2LVnD7rYtkNwgpr1w1ALHSRXzlL/81c0rC2L5hdssHYVKeufo9
      gKIQjhWzcNlKFixtcGmVJMk9E+5NJcfflPKR7AwneZoMgORpjgRA2CZvv/5bOvvTTixeknLG
      kTcqes6cIDxjNrZlXxzJWAiBZbn3Un0+lzc+KrRb5bm9L8dHE3dDzgNgZfrZe7iFUMDGVoqp
      Kq25ONS1W0Nej5cly7v5yrq0TDfkPABqoIj7H7iX7vOtaNFSFFVFZbQVya1X+GD0LJKv5bn9
      SqSb2zYeNrfKy3kpiqoRDkeYW7ss14uWpJyTrUCSp8kASJ4mAyB5mgyA5GkyAJKnyQBIniYD
      IHmau7PeSZIDrGwvevfLKL5CtMgcfOEaVH/ZhAZwkAGYIkIIhDkEwkLRwqD4QdHkexcTJITA
      zvag97yC3vMyilaAooWwzSTCGkFRA2jhOWjhuWiR0a9qYAaqrwDUyMX9LAMwxjaGMAZ2k03s
      w1+4Ei08GzVYiRqYgaJOfqRiYRvYejdW5ixmqhVrpBkr1YIQBqqvGEULoWhhFC2G4itE8RWi
      +qJjn6MoWmTslxxBKGFQvTtfsp29QKb7JfS+V1F9RUTmPE0gvgHUIMIYxDb6sDLnsdJtWOk2
      zO5GLL0LFBUtUIoaqBgNR2Sud4dHF0KAMDBTLWR7XyOb2AcItGAVtpVEGAlAAcWHFqpGC9eg
      ReaNfg1Vo6ghUAMoivaB8oSwwNaxjUGsVDPmyGms1GnM1BkQWUBFC81Ei9SihapQfEUgDGxz
      GDH2xzaHPvAZYYyuy/trjy+2nMjsp1CDMx2/akyX4dGFbaD3bCHd+UtUrYBQ1eMESjagaFc+
      GQhhg51F2Dp2thsr1YaZasXOnMVKt3kvAEIIbL0LI/EOet8bWJl2fLGlBEs/hL94DaovBghs
      M4md6cTSx88kZ7EzndhGP8JKoQbL0YJVo4EI12DaKorehpU+M/pvjQRqoBQ1WIEWmY8vUocW
      no0Wmo2iTXx0vdGgZhHWCMJMIawRTL0bvXsLdqaVUOWjBMs/iupzbvqqGwmAlW7HGDowWgUJ
      VaH4S1CUa7e5XC4AwjYwBt8j0/UitnGBUOVjBEvvvq79ePmyLG8EYPQgsjCHD6H3voYxdBBF
      DRAou59AyR2jB6V6jdqgEAg7g7CS2NkBrPTZsWCcwUq3IewsWqQWX0EtvoIFaKEaFH98tPoy
      gV/89bAsC2FlMBM7SHf8DNVfTGT25/EV3uLI1WCiARg/uWS6XiTbvw1hJkFRUXwxVH8pvoKF
      o/smuhAtVANjV89L1/nSAAhhYw4dIn3+HzFHmgiUbCBc/Rm0YO6Oo7wOgN+vYaXPkR3YSbb3
      dYSdwRdbQXDG/fgLb7n2QX+d5U3FDDG2MUi64+fofW8QKFpFeNbn0ELVOR3C8trVSQsr1UKm
      ezPZ/p34IvMJVf0x/uK1CCuNNdKEmWrGTJ7ASp9FGAMIYeOLzMMXXYRWsAAtPB81EEdRoxhG
      BiVzkvT557BSLfjjGwjP/MToduV4ZKq8DICwUqT7dmEltmMmj6EGqwiU3UOgeC1qsGpKz5K5
      8IfvAwghMIcbSXf8FCvTQajyUULlD0+6ijDuytVJGyt5kkz3ixiD76EVLCRU+Rj+wgYU9XL7
      QiAsHTvbi5XpwBxpwhppwkq3YRsDqIEy1GAFtpHE1jsIlNxBqOIRtMj8nF9Fx+VNAISwsfVu
      9AtvkO19DWGbBOJrCM54AC1SC4rf0ZvF6TBHmLCz6H2vkzn/CxRfjMjsf4WvcDmKMrkr3R9u
      m7CzmMkTpDv/CSt5Al+snlDV4/gKFl/fVVUIBDbYBrbRjznShDlyCttMEa58GC0817EDf9xN
      HwBhm5jJo6N1+8Q+1GAFwbL7UWK3EywoJ9eXzCuZDgEYZ+u9pDv/keyFt/EXrx2tN4eqbri8
      iy1cdnb0ZrT7n7GSTfjjawmWfxRfdEnOTi5uT5J3UwZACAF2muzAHvSelzHTbfijSwlWPII/
      tgzUMIZheHqWSCEszOGjpM/9X6xsH6GqxwiVfwRFCVxmeMvLHQLv/8zIZiD5Lpnu32Clz+GP
      bxirmsy92AycKzIAVyGEjZ1pR7+wDb33d4BCoGQjofKHUEOzP3AWktOkjhLCRO9+mUzXr1B8
      MbRIHQgbsEFYo+3kwgIsEPZlvrew9W4AAqUbCVU8OqmrybXX190A3BRPgsfPZnrPFozB91AD
      ZYRnfopAfN1Y+7LsPnAliuIjVPEI/vha9O6XsM3EWJeLwNjX0T8oKqBd/BnK+58toRGKr0EN
      VuTdvp7WARDCItu/g0znC9h6F75YPdG6/4AvVu/4TW1eURS0YCWR2Z+/+P31yGazaC5eTd00
      vQNgpUdv5AobCJT9BVp4juOtAnlNnjD+hWkdANUXJVr31/JsLzlmWgcAuMIDFUnKDVmfkDxN
      BkDyNEcCoCf7OXzoMP3JjBOLl6SccSQAF/oHqa4uo6X5rJxUT5rWHLkJrqyeSWtTMzNn12Bb
      1sXx3rPZrBPFXVY+lzc+gvL4PAFOm4p9edMOjw7Q2tRE2ewFFEYCow9hNA1N0/K2a4Lb5bk9
      PLrbr0QqiuJaVwhnpkgyUhx8dy+HT55zYvGSlDOOnELqlq+hzokFS1KOyWZQydNkACRPkwGQ
      PE0GQPI0GQDJ02QAJE+TAZA8TQZA8jQZAMnTZAAkT5MBkDxNBkDyNBkAydNkACRPkwGQPE0G
      QPI0GQDJ02QAJE+TAZA8TQZA8jQZAMnTZAAkT3NkWJSWxnc43TnAzLpbWDqv3KV5GiXp+jlw
      BRAkrSD33bMJc7Bfjg0qTWuOVIFsYWPbFkJR5dlfmtYcCIBCRczPW9v2UlRRIQMgTWuO3ANU
      1dZTVVvvxKIlKac+MFH24OAguq47UlAqlSISiTiy7MuxLAtNy+0s5tOlvPHh0VXVnUa8fN6X
      rs0UbxiGa0Ne53t5tm0jhHDtIHFz24QQWJbl2tDvrj0HcHua03wvz015vW1uXQEkaTqST4Il
      T3M1AEYqwTs7t3PiTLej5Qx0nWHn9m00t19wtJxxwtLZv3MfaTfKEjbNje+y453DmJbDc4QJ
      m3NNjWzbvou+YWcaR8Zlhvs5cOgIGcMmlehm147tnOkedKQs28zSeuIAZ3tT7gagq72N2fVr
      MHrOkXGw4qWFi1m7bjWDvV3OFXKJjpYmUmkDN6aRs4fauKDMZP2ty9BUZ+vmwjLoTOisvbWO
      s2c6nS1L0YiEfZimTXtbB8tuW0vPuRZHehIIASUlBYyMmO4GQAiVSCRILOxDd/DkFfKrnDzZ
      yoLFC5wrZEw22UfnMBQFBLpuOF6ePjhMV1cLb259i96U6WxhqkaBlmXvO8eIxWOOFhWOFhEO
      aIBAqEHCoSBhn4oTh4nmD1AUKwBcrgJFIgFOHDpIe9Im6mAL3tED+zFQuHBhwLlCxtgoBBSD
      zp4eEkMpx8sLV8xiRjhESTSIYTnbfiFsm2TGYMaMEgYH+h0ta6jvPK2tbTS3thMKGBw+eICk
      7ceJw8TUR2hqauHsmdPutgIJ2yIxMEAwWkwk6Fw7b3Kwn5GMgT9UQElR1LFyLpXNZNBCIUd+
      YZcSQpBODpK2VEqKYg43UQoyqSRDIzrxklL8mnNlZUaGGEymUbQApfEoiYEE0eJSgr7cn6Mt
      M8tA/wAWqmwGlbxNNoNKniYDIHmaDIDkaTIAkqe50+VOkq6XyLLj1S2cH7JZd/f91JQ505on
      rwDStDTcspcWMY9H7l/J1i1v0dTUgmmP0HXiBG+/+jIn2/s5d6aJI++9y9Aknj/KK4A0LY0k
      +impXES4MISRHqDl8D5S3TFe2XWSQGExRusrLC3ooWTVJ4hN4iiWAZCmpRmL19Dx05f4bUuI
      mhVrWRLp5u83H+Cxu5fQ2GFRt6COobb9LKgpZzLPAuWDMGnaSo8MkdIFxcWFKMJkOKUTi4QY
      HEygBgoI+gT+QHhSnQJlACRPkzfBkqf9f963jjuReDq/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      ZIApAfi+j/8fdAsPrZMI09cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
